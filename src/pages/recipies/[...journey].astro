---
import BaseLayout from "../../layout/BaseLayout.astro";
import { getRecipies, getSection } from "../../utils/recipies";
import RecipeToc from "../../components/recipe_toc.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const recipies = await getRecipies();

  const journeys = [...new Set(recipies.flatMap(recipe => recipe.data.journey))];
  console.log(journeys);

  const paths =  journeys.map(journey => ({
    params: { journey }, props: { journey },
  }));

  return paths;
}


const { journey } = Astro.params;
type Props = {
  journey: string;
};  

const recipies = await getRecipies();
const filteredRecipies = recipies.filter(recipe => recipe.data.journey?.includes(journey));

const journeySection = await getSection(journey);

---
<BaseLayout pageTitle={journey} description={journey} category="recipies">
  <a href="/recipies" class="text-sm text-gray-500 hover:text-gray-700">← Back to all recipies </a>

  <h1 class="text-4xl py-0 md:text-6xl tracking-wide md:py-8 font-light text-right md:text-center italic">{journey} recipies</h1>

    {journeySection && <div class="prose  text-lg pb-4 justify" set:html={journeySection.rendered.html}></div>}


    <RecipeToc recipies={filteredRecipies} grouping="journey" />
</BaseLayout>
