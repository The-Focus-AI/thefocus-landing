---
import { getCaseStudies } from "../../utils/case-studies";
import ArticleLayout from "../../layout/ArticleLayout.astro";
import { render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { marked } from "marked";
import RelatedCaseStudy from "../../components/related/related-case-study.astro";
import type { ImageMetadata } from 'astro';
import CaseStudyFull from "../../components/cards/case-study-full.astro";

export async function getStaticPaths() {
  const case_studies = await getCaseStudies();

  const paths = case_studies.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));

  return paths;
}

const { entry } = Astro.props;

const case_study = entry as CollectionEntry<"case_studies">;
const { Content } = await render(entry);

const related_case_studies = await getCaseStudies();
// Filter out the current case study from related list
const filtered_case_studies = related_case_studies.filter(
  (cs) => cs.id !== case_study.id
);


---

<ArticleLayout
  pageTitle={case_study.data.title}
  description={case_study.data.description}
  category="case-studies"
>
  <div slot="sidebar">
    <h3 class="text-xl font-bold mb-6">Related Case Studies</h3>
    <div class="space-y-6">
      {filtered_case_studies.map((cs) => <RelatedCaseStudy case_study={cs} />)}
    </div>
    <div class="mt-12">
      <h3 class="text-xl font-bold mb-6">
        Ready to Transform Your Business?
      </h3><p class="text-gray-700 mb-4">
        Let's discuss how our schema-driven AI solutions can address your
        specific challenges and deliver measurable results.
      </p><a
        href="/contact"
        class="inline-block px-6 py-3 bg-black text-white font-bold uppercase text-sm tracking-wider hover:bg-orange-500 transition-colors"
        >Contact Us</a
      >
    </div>
  </div>


<div slot="hero">
  <CaseStudyFull case_study={case_study} />
  </div>

  <div class="space-y-8">
    <section>
      <h3 class="text-2xl font-bold mb-4">Challenge</h3>
      <div
        class="prose text-gray-700"
        set:html={marked.parse(case_study.data.challenge)}
      />
    </section>
    <section>
      <h3 class="text-2xl font-bold mb-4">Solution</h3>
      <div
        class="prose text-gray-700"
        set:html={marked.parse(case_study.data.solution)}
      />
    </section>
    <section>
      <h3 class="text-2xl font-bold mb-4">Results</h3>
      <div class="prose" set:html={marked.parse(case_study.data.results)} />
    </section>
    <section class="prose max-w-prose article">
      <Content />
    </section>
    {
      case_study.data.testimonial && (
        <section class="bg-gray-200 p-8 font-inter">
          <blockquote class="italic text-gray-700 text-lg mb-4">
            {case_study.data.testimonial}
          </blockquote>
          <p class="font-bold">{case_study.data.testimonial_person}</p>
          <p class="text-sm text-gray-600">
            {case_study.data.testimonial_company}
          </p>
        </section>
      )
    }
  </div>
</ArticleLayout>
