---
import ArticleLayout from "../../layout/ArticleLayout.astro";
import { getrecipes, getRelatedrecipes } from "../../utils/recipes";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import RecipeCard from "../../components/cards/recipe-card.astro";
import BlogPostSchema from "../../components/schemas/post.astro";
import BreadcrumbList from "../../components/schemas/breadcrumb.astro";
import RelatedRecipe from "../../components/related/related-recipe.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const recipes = await getrecipes();

  const paths = recipes.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));

  return paths;
}

const { entry } = Astro.props;
type Props = {
  entry: CollectionEntry<"recipes">;
};
const { Content } = await render(entry);

let relatedrecipes = await getRelatedrecipes(entry);

// Get the image for the post
const images = await import.meta.glob<{ default: ImageMetadata }>(
  "/src/content/assets/recipes/*.{jpeg,jpg,png,gif}"
);
const img_key = `/src/content/assets/recipes/${entry.data.image}`;
if (!images[img_key]) throw new Error(`Image not found: ${img_key}`);

// @ts-ignore
const image = await images[img_key]().src;
---

<ArticleLayout
  pageTitle={entry.data.title}
  description={entry.data.description}
  category="recipes"
>

<BlogPostSchema
    slot="head"
    title={entry.data.title}
    description={entry.data.description}
    publishDate={entry.data.date}
    author={entry.data.author}
    image={image}
    keywords={entry.data.tags}
  />
  <BreadcrumbList slot="head" />

<div slot="hero">
  <p class="text-sm text-gray-500 hover:text-gray-700 pb-8">
    <a href="/recipes">← Back to all recipes </a>
  </p>

    <RecipeCard recipe={entry} />
</div>

  <div class="prose lg:prose-xl max-w-prose article">
    <Content />
  </div>

  <div slot="sidebar">
    {relatedrecipes.length > 0 && (
      <div>
        <h3 class="text-xl font-bold mb-6">Related Recipes</h3>
        {relatedrecipes.map((recipe, index) => (
          <RelatedRecipe recipe={recipe} />
        ))}
      </div>
    )}


  </div>
  
</ArticleLayout>
<!--   
 -->

<!-- /*
<div slot="hero">
  <p class="text-sm text-gray-500 hover:text-gray-700 pb-8">
    <a href="/recipes">← Back to all recipes </a>
  </p>

  <RecipeCard recipe={entry} />
</div>
*/ -->
