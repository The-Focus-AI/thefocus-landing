---
import BaseLayout from "../../layout/BaseLayout.astro";
import { getTagSlug, getTagDisplay } from "../../utils/ids";
import { getrecipes, getRelatedrecipes } from "../../utils/recipes";   
import type { CollectionEntry } from 'astro:content'; 
import { render } from "astro:content";
import RecipeToc from "../../components/recipe_toc.astro"; 
import RecipeImage from "../../components/recipe_image.astro";
import RecipeCard from "../../components/recipe_card.astro";
import BlogPostSchema from "../../components/schemas/post.astro";
import BreadcrumbList from "../../components/schemas/breadcrumb.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const recipes = await getrecipes();

  const paths =  recipes.map(entry => ({
    params: { id: entry.id }, props: { entry },
  }));

  return paths;
}

const { entry } = Astro.props;
type Props = {
  entry: CollectionEntry<'recipes'>;
};
const { Content } = await render(entry);

let relatedrecipes = await getRelatedrecipes(entry);

// Get the image for the post
const images = await import.meta.glob<{ default: ImageMetadata }>('/src/content/assets/recipes/*.{jpeg,jpg,png,gif}');
const img_key= `/src/content/assets/recipes/${entry.data.image}`;
if (!images[img_key]) throw new Error(`Image not found: ${img_key}`);

// @ts-ignore
const image = await images[img_key]().src;

---
<BaseLayout pageTitle={entry.data.title} description={entry.data.description} category="recipes" >

  <BlogPostSchema 
  slot="head"
  title={entry.data.title}
  description={entry.data.description}
  publishDate={entry.data.date}
  author={entry.data.author}
  image={image} 
  keywords={entry.data.tags}
/>
<BreadcrumbList slot="head" />

  <p class="text-sm text-gray-500 hover:text-gray-700 pb-8">
    <a href="/recipes">‚Üê Back to all recipes </a>
  </p>

  <RecipeCard recipe={entry} />

  <article class="prose lg:prose-xl max-w-prose article">
  

    <!-- <div class="pt-4">
      <ElevenLabsAudioNative 
      client:only="react" 
      publicUserId="35dce06c47f602962978963a788374c31ce9d25a7764e80220eae64f51bfc6f3" 
      projectId={entry.data.audio}/>
    </div> -->

  <!-- {entry.data.image && <PostImage post={entry} />} -->
  <div class="content">
      <Content />

  </div>
  </article>
  <div class="container mx-auto">
    {relatedrecipes.length > 0 && <>
      <h2 class="text-2xl font-bold text-gray-900  text-center border-t-gray-200 border-t-2 mt-0 py-16">Related recipes</h2>
      {relatedrecipes.map((recipe,index) => (

 <h2 class="text-2xl italic font-light py-8">{recipe.data.section.join(', ')}</h2>
        <RecipeCard recipe={recipe} reverse={index % 2 === 1} />   
      ))}
    </>
  }
  </div>


</div>

</BaseLayout>

